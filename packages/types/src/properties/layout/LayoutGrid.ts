// This file was generated by [ts-rs](https://github.com/Aleph-Alpha/ts-rs). Do not edit this file manually.
import type { Color } from "../color/Color";
import type { LayoutGridAlignment } from "./LayoutGridAlignment";
import type { LayoutGridPattern } from "./LayoutGridPattern";
import type { VariableAlias } from "../VariableAlias";

/**
 * Guides to align and place objects within a frame
 */
export type LayoutGrid = { 
/**
 * Orientation of the grid as a string enum
 * COLUMNS: Vertical grid
 * ROWS: Horizontal grid
 * GRID: Square grid
 */
pattern: LayoutGridPattern, 
/**
 * Width of column grid or height of row grid or square grid spacing
 */
sectionSize: number, 
/**
 * Is the grid currently visible?
 */
visible: boolean, 
/**
 * Color of the grid
 */
color: Color, 
/**
 * The following properties are only meaningful for directional grids (COLUMNS or ROWS)
 * Positioning of grid as a string enum
 * MIN: Grid starts at the left or top of the frame
 * STRETCH: Grid is stretched to fit the frame
 * CENTER: Grid is center aligned
 */
alignment: LayoutGridAlignment, 
/**
 * Spacing in between columns and rows
 */
gutterSize: number, 
/**
 * Spacing before the first column or row
 */
offset: number, 
/**
 * Number of columns or rows
 */
count: number, 
/**
 * A mapping of field to the VariableAlias of the bound variable
 */
boundVariables: { [key in string]?: VariableAlias }, };
